# Example values for kafka-sendgrid deployment
# Copy this file to values.yaml and modify as needed

replicaCount: 2

image:
  repository: ghcr.io/cspb1913/kafka-sendgrid
  pullPolicy: IfNotPresent
  tag: "1.0.0"

# Application configuration
config:
  kafka:
    # Kafka cluster deployed in kube-kafka namespace
    bootstrapServers: "kafka-external.kafka.svc.cluster.local:9092"
    consumerGroupId: "form137-sendgrid-consumer"
    autoOffsetReset: "earliest"
    topicName: "form137-email-notifications"
  
  sendgrid:
    apiKey: ""  # Will be provided via secret
    fromEmail: "no-reply@example.com"

# Secrets - These values should be set during deployment
secrets:
  sendgridApiKey: "your-sendgrid-api-key-here"
  sendgridFromEmail: "no-reply@example.com"

# Resource limits for production
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Health checks
livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Service configuration
service:
  type: ClusterIP
  port: 8080

# Security context for production
podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""